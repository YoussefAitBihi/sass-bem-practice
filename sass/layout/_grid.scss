// Grid system

// Row element
.row {
   // Extra large container
   max-width: $gutter-width; // 1rem = 10px
   margin: 0 auto;
   // Solve the problem with zero-height container
   @include clearfix;

   @include respondMax($tablet-land) {
      padding: 0 2rem;
   }

   // [class=^='col-'] Selects all elements with attr whose his value starts with'col-'
   // [class=~='col-'] Selects all elements with attr whose his value contains 'col-'
   // [class=$='col-'] Selects all elements with attr whose his value ends with 'col-'
   & > [class^='col-'] {
      float: left;

      @include respond($phone) {
         width: 100% !important;

         &:not(:last-child) {
            margin-bottom: 3.5rem;
         }
      }
   }

   // Two column in one row
   & > .col-1-of-2 {
      width: calc(50% - ($gutter-horizontal / 2));
   }

   & > [class^='col-']:not(:last-child) {
      margin-right: $gutter-horizontal;
   }

   & > .col-1-of-3 {
      width: calc((100% - 2 * $gutter-horizontal) / 3);

      @include respond($phone) {
         width: calc(50% - ($gutter-horizontal / 2));

         &:nth-of-type(2) {
            margin-right: 0;
         }

         &:not(:last-of-type) {
            margin-bottom: 2.5rem;
         }
      }

      @include respond($tablet-port) {
         width: calc(50% - ($gutter-horizontal / 2));

         &:nth-of-type(2) {
            margin-right: 0;
         }

         &:not(:last-of-type) {
            margin-bottom: 2.5rem;
         }
      }
   }

   & > .col-2-of-3 {
      width: calc(
         (((100% - 2 * $gutter-horizontal) / 3) * 2) + $gutter-horizontal
      );
   }

   & > .col-1-of-4 {
      width: calc((100% - 3 * $gutter-horizontal) / 4);

      @include respond($tablet-port) {
         width: calc(50% - ($gutter-horizontal / 2));
         &:nth-of-type(2) {
            margin-right: 0;
         }

         &:not(:nth-of-type(3)),
         &:not(:last-of-type) {
            margin-bottom: 2rem;
         }
      }
   }

   & > .col-2-of-4 {
      width: calc(
         2 * ((100% - 3 * $gutter-horizontal) / 4) + $gutter-horizontal
      );
   }

   & > .col-3-of-4 {
      width: calc(
         (3 * (100% - 3 * $gutter-horizontal) / 4) + 2 * $gutter-horizontal
      );
   }
}
